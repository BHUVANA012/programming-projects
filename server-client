import pymongo
from pymongo import MongoClient
import socket
import threading

client=MongoClient('localhost',27017)
mydb=client["databasee1"]
#mydb=client.databasee1
mycol=mydb["collection1"]
data=[{'search':'code using python','URl':'WWW.PYTHON.COM'},{'search':'code using c++','URL':'www.c++.com'}]
mycol.insert_many(data)
"""k=input("Please input a key: ")
v=input("Plesse input a value: ")
D={k:v}
#def updated_data():
 a = input("Please input a key: ")
    b = input("Plesse input a value: ")
    z= {a: b}"""

#mycol.insert_one(D)
def insert(mycol,d):
    mycol.insert_one(d)
    print("inserted")
def find(d):
    show=mycol.find(d)
    print(show)
"""def update(d):
    a = input("Please input a key: ")
    b = input("Plesse input a value: ")
    z = {a: b}
   #c= updated_data()
    mycol.update_many(d,z)"""
def drop(d):
    mycol.drop(d)







HEADER = 64
PORT = 12345
SERVER = socket.gethostbyname(socket.gethostname())
SERVER="192.168.234.1"
ADDR = (SERVER, PORT)
FORMAT = 'utf-8'
DISCONNECT_MESSAGE = "!DISCONNECT"

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind(ADDR)


def handle_client(conn, addr):
    print(f"[NEW CONNECTION] {addr} connected.")

    connected = True
    while connected:
        msg_length = conn.recv(HEADER).decode(FORMAT)
        if msg_length:
            msg_length = int(msg_length)
            msg = conn.recv(msg_length).decode(FORMAT)
            if msg == DISCONNECT_MESSAGE:
                connected = False

            print(f"[{addr}] {msg}")
            conn.send("Msg received".encode(FORMAT))

    conn.close()


def start():
    server.listen()
    print(f"[LISTENING] Server is listening on {SERVER}")
    while True:
        conn, addr = server.accept()
        thread = threading.Thread(target=handle_client, args=(conn, addr))
        thread.start()
        print(f"[ACTIVE CONNECTIONS] {threading.active_count() - 1}")



print("[STARTING] server is starting...")
start()


